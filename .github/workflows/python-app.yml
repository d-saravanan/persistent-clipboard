name: Build and Release Persistent Clipboard Source

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
    - name: Install pyinstaller
      run: pip install pyinstaller 

    - name: Build executable
      run: pyinstaller --onefile --name persistent_clipboard main.py

    - name: Archive build output
      uses: actions/upload-artifact@v4
      with:
        name: executable
        path: dist/persistent_clipboard.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: executable
        path: .

    - name: Get previous version
      id: get_version
      uses: actions/github-script@v6
      with:
        script: |
          if (github.repos) {
            const tags = await github.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo,
            }).catch(err => { return { data: [] }; });
    
            if (!tags || !tags.data || tags.data.length === 0) {
              return 'v1.0.0';
            } else {
              const latestTag = tags.data[0].name;
              const [major, minor, patch] = latestTag.replace('v', '').split('.').map(Number);
              return `v${major}.${minor}.${patch + 1}`;
            }
          } else {
            return 'v1.0.0';
          }
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.persistent_clipboard_token }}
      with:
        tag_name: ${{ steps.get_version.outputs.result  }}
        release_name: Release ${{ steps.get_version.outputs.result  }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.persistent_clipboard_token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/persistent_clipboard.exe
        asset_name: persistent_clipboard.exe
        asset_content_type: application/octet-stream
